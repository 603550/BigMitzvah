const appearance = {
    // If you are planning to extensively customize rules, use the "none"
    // theme. This theme provides a minimal number of rules by default to avoid
    // interfering with your custom rule definitions.
    theme: 'none',

    rules: {
      '.Tab': {
        border: '1px solid #E0E6EB',
        boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 6px rgba(18, 42, 66, 0.02)',
      },

      '.Tab:hover': {
        color: 'var(--colorText)',
      },

      '.Tab--selected': {
        borderColor: '#E0E6EB',
        boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 6px rgba(18, 42, 66, 0.02), 0 0 0 2px var(--colorPrimary)',
      },

      '.Input--invalid': {
        boxShadow: '0 1px 1px 0 rgba(0, 0, 0, 0.07), 0 0 0 2px var(--colorDanger)',
      },

      // See all supported class names and selector syntax below
    }
  };

  // Pass the appearance object to the Elements instance
  // const elements = stripe.elements({clientSecret, appearance});
  //rules: https://stripe.com/docs/stripe-js/appearance-api#detail-rules
  //Allowed CSS: https://stripe.com/docs/stripe-js/appearance-api#supported-css-properties
